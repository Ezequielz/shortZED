// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

enum PlanName {
  free
  basico
  popular
  super
}

model Link {
  id        String   @id @default(uuid())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  shortUrl  String   @unique
  clicks    Int      @default(0)
  limit     Int?     @default(10)
  isActive  Boolean  @default(true)
  qr        String

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  plan   Plan   @relation(fields: [planId], references: [id])
  planId String
}

// Auth.js

model Account {
  id                       String  @id @default(uuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  password      String?
  roles         Role      @default(user)
  isActive      Boolean   @default(true)
  emailVerified DateTime?
  image         String?
  // shortener     String?   @unique
  accounts      Account[]
  sessions      Session[]
  Link          Link[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Plan {
  id    String   @id @default(uuid())
  name  PlanName
  price Int
  limit Int?
  Link  Link[]
}
